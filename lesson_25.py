"""
Урок 25.
Тема: Функции. Типы аргументов. Докуументация. DRY. SRP.

DRY - Don't Repeat Yourself - Не повторяйся.
Принцип DRY гласит, что каждая часть функционала должна быть написана только один раз.

SRP - Single Responsibility Principle - Принцип единственной ответственности.
Принцип SRP гласит, что каждый класс должен иметь только одну ответственность.

Функции - это блоки кода, которые выполняют определенную задачу.
Функции могут принимать аргументы и возвращать значения.
Функции позволяют избежать дублирования кода.
Функции или же программа - это фрагменты программы, которые выполняют определенную задачу, и могут быть вызваны из других частей программы.
"""

# def - ключевое слово для определения функции


# Функции с множественными параметрами *args

print(1)
print(1, 2)
# print(1,2,3, n...)


def get_many_sum(*nums):
    print(nums)  # tuple - кортеж (1,2,3,4,5,6,7,8,9,10)
    print(type(nums))  # <class 'tuple'>
    print(*nums)  # 1 2 3 4 5 6 7 8 9 10
    print(nums[0], nums[1], nums[2], nums[3], nums[4], nums[5])


get_many_sum(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)
get_many_sum("п", "р", "и", "в", "е", "т")
num_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
get_many_sum(*num_list)

"""
Напишите функцию, которая принимает *args слов
и возвращает их количество

Напишите функию которая принимает *args слов
проверяет их на палиндромы и возвращает список палиндромов

Напишите функцию, которая принимает *args слов
проверяет их на палиндромы и возвращает словарь формата {слово: True/False}
"""


def number_words(*args):
    return len(args)


print(number_words("привет", "мир", "как", "дела"))


def palindromes(*args):
    return {word for word in args if word.lower() == word.lower()[::-1]}


print(palindromes("лепс спел", "мир", "как", "дела"))


def palindromes_dict(*args):
    return {word: word.lower() == word.lower()[::-1] for word in args}

print(palindromes_dict("лепс спел", "мир", "как", "дела"))